(print "CHECK-ROW TESTS")
(setq row1 '(0 0 1 1 1 1 0 0 0))
(setq row2 '(1 0 0 0 0 0 2 0 1))
(print (equal (check-row row1) T))
(print (equal (check-row row2) NIL))

(print "GOAL-TEST TESTS")
(setq p1 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 2 0 1) 
		   (1 0 1 0 4 1 2 0 1) 
		   (1 0 4 0 4 1 3 0 1)
		   (1 1 1 1 1 1 1 1 1)))
(setq p2 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 0 0 1) 
		   (1 0 1 0 5 1 0 0 1) 
		   (1 0 6 0 5 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1)))
(print (equal (goal-test p1) NIL))
(print (equal (goal-test p2) T))

(print "GET-COL TESTS")
(setq row '(0 1 2 3 4 5 6 7))
(print (equal (get-col '() 0) wall))
(print (equal (get-col row 0) 0))
(print (equal (get-col row 1) 1))
(print (equal (get-col row 2) 2))
(print (equal (get-col row 3) 3))
(print (equal (get-col row 4) 4))
(print (equal (get-col row 5) 5))
(print (equal (get-col row 6) 6))
(print (equal (get-col row 7) 7))
(print (equal (get-col row 8) wall))

(print "GET-SQUARE TESTS")
(setq p3 '((0 1 2 3 4 5 6 7 8)
		   (1 2 3 4 5 6 7 8 9) 
		   (2 3 4 5 6 7 8 9 1) 
		   (3 0 1 0 4 1 2 0 1) 
		   (4 0 4 0 4 1 3 0 1)
		   (5 1 1 1 1 1 1 1 1)))
(print (equal (get-square p3 0 0) 0))
(print (equal (get-square p3 5 8) 1))
(print (equal (get-square p3 3 4) 4))

(print "SET-COL TESTS")
(setq row '(0 1 2 3 4 5 6 7))
(print (equal (set-col row 3 8) '(0 1 2 8 4 5 6 7)))
(print (equal (set-col row 0 8) '(8 1 2 3 4 5 6 7)))
(print (equal (set-col row 7 8) '(0 1 2 3 4 5 6 8)))

(print "SET-SQUARE TESTS")
(setq p4 '((0 1 2 3 4 5 6 7 8)
		   (1 0 0 0 0 0 0 0 0) 
		   (2 0 0 0 0 0 0 0 0) 
		   (3 0 0 0 0 0 0 0 0) 
		   (4 0 0 0 0 0 0 0 0)
		   (5 0 0 0 0 0 0 0 0)))
(print (equal (set-square p4 3 4 8) 
		 '((0 1 2 3 4 5 6 7 8)
		   (1 0 0 0 0 0 0 0 0) 
		   (2 0 0 0 0 0 0 0 0) 
		   (3 0 0 0 8 0 0 0 0) 
		   (4 0 0 0 0 0 0 0 0)
		   (5 0 0 0 0 0 0 0 0))))
(print (equal (set-square p4 0 0 8) 
		 '((8 1 2 3 4 5 6 7 8)
		   (1 0 0 0 0 0 0 0 0) 
		   (2 0 0 0 0 0 0 0 0) 
		   (3 0 0 0 0 0 0 0 0) 
		   (4 0 0 0 0 0 0 0 0)
		   (5 0 0 0 0 0 0 0 0))))
(print (equal (set-square p4 5 8 8) 
		 '((0 1 2 3 4 5 6 7 8)
		   (1 0 0 0 0 0 0 0 0) 
		   (2 0 0 0 0 0 0 0 0) 
		   (3 0 0 0 0 0 0 0 0) 
		   (4 0 0 0 0 0 0 0 0)
		   (5 0 0 0 0 0 0 0 8))))

(print "TRY-MOVE TESTS")
(setq p1 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 2 0 1) 
		   (1 0 1 0 4 1 2 0 1) 
		   (1 0 4 0 4 1 3 0 1)
		   (1 1 1 1 1 1 1 1 1)))
(print (equal (try-move p1 4 6 'UP) NIL))
(print (equal (try-move p1 4 6 'DOWN) NIL))
(print (equal (try-move p1 4 6 'LEFT) NIL))
(print (equal (try-move p1 4 6 'RIGHT)
		 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 2 0 1) 
		   (1 0 1 0 4 1 2 0 1) 
		   (1 0 4 0 4 1 0 3 1)
		   (1 1 1 1 1 1 1 1 1))))

(setq p1 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 2 3 1) 
		   (1 0 1 0 4 1 2 0 1) 
		   (1 0 4 0 4 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1)))
(print (equal (try-move p1 2 7 'UP) NIL))
(print (equal (try-move p1 2 7 'DOWN) 
		 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 2 0 1) 
		   (1 0 1 0 4 1 2 3 1) 
		   (1 0 4 0 4 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1))))
(print (equal (try-move p1 2 7 'LEFT)
		 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 2 3 0 1) 
		   (1 0 1 0 4 1 2 0 1) 
		   (1 0 4 0 4 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1))))
(print (equal (try-move p1 2 7 'RIGHT) NIL))

(setq p1 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 4 2 3 1) 
		   (1 0 1 0 4 1 2 4 1) 
		   (1 0 4 0 4 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1)))
(print (equal (try-move p1 2 7 'LEFT)
		 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 5 3 0 1) 
		   (1 0 1 0 4 1 2 4 1) 
		   (1 0 4 0 4 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1))))
(print (equal (try-move p1 2 7 'DOWN)
		 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 4 2 0 1) 
		   (1 0 1 0 4 1 2 6 1) 
		   (1 0 4 0 4 1 0 0 1)
		   (1 1 1 1 1 1 1 1 1))))

(print "NEXT-STATES TESTS")
(setq s1 '((1 1 1 1 1)
		   (1 4 0 0 1) 
		   (1 0 2 0 1) 
		   (1 0 3 0 1) 
		   (1 0 0 0 1) 
		   (1 1 1 1 1)))
(print (equal (next-states s1) 
	'(((1 1 1 1 1) (1 4 2 0 1) (1 0 3 0 1) (1 0 0 0 1) (1 0 0 0 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 4 0 0 1) (1 0 2 0 1) (1 0 0 0 1) (1 0 3 0 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 4 0 0 1) (1 0 2 0 1) (1 3 0 0 1) (1 0 0 0 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 4 0 0 1) (1 0 2 0 1) (1 0 0 3 1) (1 0 0 0 1) (1 1 1 1 1)) 
)))

(setq s2 '((1 1 1 1 1)
		   (1 0 0 4 1) 
		   (1 0 2 3 1) 
		   (1 0 0 0 1) 
		   (1 0 0 4 1) 
		   (1 1 1 1 1)))
(print (equal (next-states s2)
	'(((1 1 1 1 1) (1 0 0 6 1) (1 0 2 0 1) (1 0 0 0 1) (1 0 0 4 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 0 0 4 1) (1 0 2 0 1) (1 0 0 3 1) (1 0 0 4 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 0 0 4 1) (1 2 3 0 1) (1 0 0 0 1) (1 0 0 4 1) (1 1 1 1 1)))))

(setq s3 '((1 1 1 1 1)
		   (1 0 0 6 1) 
		   (1 0 2 0 1) 
		   (1 0 0 0 1) 
		   (1 4 0 4 1) 
		   (1 1 1 1 1)))
(print (equal (next-states s3)
	'(((1 1 1 1 1) (1 0 0 4 1) (1 0 2 3 1) (1 0 0 0 1) (1 4 0 4 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 0 3 4 1) (1 0 2 0 1) (1 0 0 0 1) (1 4 0 4 1) (1 1 1 1 1)))))

(setq s4 '((1 1 1 1 1)
		   (1 0 2 4 1) 
		   (1 0 0 0 1) 
		   (1 0 0 0 1) 
		   (1 0 5 3 1) 
		   (1 1 1 1 1)))
(print (equal (next-states s4)
	'(((1 1 1 1 1) (1 0 2 4 1) (1 0 0 0 1) (1 0 0 3 1) (1 0 5 0 1) (1 1 1 1 1))
	  ((1 1 1 1 1) (1 0 2 4 1) (1 0 0 0 1) (1 0 0 0 1) (1 2 6 0 1) (1 1 1 1 1)))))

(print "COUNT-BOXES-IN-ROW TESTS")
(setq row1 '(1 0 0 0 0 0 2 0 1))
(setq row2 '(1 2 0 0 0 0 2 0 1))
(setq row3 '(2 2 2 2 2 2 2 2 2))
(setq row4 '(1 0 0 0 0 0 0 0 1))
(print (equal (count-boxes-in-row row1) 1))
(print (equal (count-boxes-in-row row2) 2))
(print (equal (count-boxes-in-row row3) 9))
(print (equal (count-boxes-in-row row4) 0))

(print "H1 TESTS")
(setq p3 '((2 2 2 2 2 2 2 2 2)
		   (2 2 2 2 2 2 2 2 2)
		   (2 2 2 2 2 2 2 2 2)
		   (2 2 2 2 2 2 2 2 2)
		   (2 2 2 2 2 2 2 2 2)
		   (2 2 2 2 2 2 2 2 2)))
(print (equal (h1 p1) 2))
(print (equal (h1 p2) 0))
(print (equal (h1 p3) 54))

(print (manhattan-dist 2 2 3 1))

(setq row1 '(1 0 0 0 0 0 2 0 1))
(print (check-row-for-type wall row1 0 0))
(setq s1 '((1 1 1 1 1)
		   (1 4 0 0 1) 
		   (1 0 2 0 1) 
		   (1 0 3 0 1) 
		   (1 0 0 0 1) 
		   (1 1 1 1 1)))
(print (get-all-coords-for-type wall s1 0 0))
(print (get-all-coords-for-type box s1 0 0))

(setq p1 '((0 0 1 1 1 1 0 0 0)
		   (1 1 1 0 0 1 1 1 1) 
		   (1 0 0 0 0 0 2 0 1) 
		   (1 0 1 0 4 1 2 0 1) 
		   (1 0 4 0 4 1 3 0 1)
		   (1 1 1 1 1 1 1 1 1)))
(setq x (car (get-all-coords-for-type box p1 0 0)))
(print x)
(setq boxes (get-all-coords-for-type box p1 0 0))
(setq goals (get-all-coords-for-type star p1 0 0))
(print boxes)
(print goals)
(print (shortest-distance goals x))
(print (total-distances goals boxes))